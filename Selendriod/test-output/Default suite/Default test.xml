<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="imran-HP" name="Default test" tests="4" failures="0" timestamp="27 Mar 2019 02:58:02 GMT" time="0.143" errors="0">
  <testcase name="@BeforeSuite invokeServer" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <failure type="java.lang.NoSuchMethodError" message="org.apache.commons.io.FileUtils.getUserDirectory()Ljava/io/File;">
      <![CDATA[java.lang.NoSuchMethodError: org.apache.commons.io.FileUtils.getUserDirectory()Ljava/io/File;
	at io.selendroid.standalone.builder.SelendroidServerBuilder.androidDebugKeystore(SelendroidServerBuilder.java:306)
	at io.selendroid.standalone.builder.SelendroidServerBuilder.signTestServer(SelendroidServerBuilder.java:250)
	at io.selendroid.standalone.builder.SelendroidServerBuilder.resignApp(SelendroidServerBuilder.java:154)
	at io.selendroid.standalone.server.model.SelendroidStandaloneDriver.addToAppsStore(SelendroidStandaloneDriver.java:121)
	at io.selendroid.standalone.server.model.SelendroidStandaloneDriver.initApplicationsUnderTest(SelendroidStandaloneDriver.java:155)
	at io.selendroid.standalone.server.model.SelendroidStandaloneDriver.<init>(SelendroidStandaloneDriver.java:94)
	at io.selendroid.standalone.server.SelendroidStandaloneServer.initializeSelendroidServer(SelendroidStandaloneServer.java:63)
	at io.selendroid.standalone.server.SelendroidStandaloneServer.<init>(SelendroidStandaloneServer.java:52)
	at io.selendroid.standalone.SelendroidLauncher.launchServer(SelendroidLauncher.java:65)
	at io.selendroid.standalone.SelendroidLauncher.launchSelendroid(SelendroidLauncher.java:90)
	at com.selendriod.demo.driver_setup.CreateSession.startSelendriodServer(CreateSession.java:100)
	at com.selendriod.demo.driver_setup.CreateSession.invokeServer(CreateSession.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite invokeServer -->
  <testcase name="@BeforeMethod createDriver" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod createDriver -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod createDriver" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod createDriver -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod createDriver" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod createDriver -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod createDriver" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod createDriver -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="AddEmployee" time="0.033" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- AddEmployee -->
  <testcase name="CreatePackage" time="0.002" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- CreatePackage -->
  <testcase name="EmployerRegister" time="0.002" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- EmployerRegister -->
  <testcase name="PlanSelectionOnEmployer" time="0.002" classname="com.selendriod.demo.testcases.TestClass">
    <skipped/>
  </testcase> <!-- PlanSelectionOnEmployer -->
</testsuite> <!-- Default test -->
